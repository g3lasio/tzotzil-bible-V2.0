=== CONFIGURACI√ìN DE DEPLOYMENT OBLIGATORIA ===

‚ö†Ô∏è IMPORTANTE: No puedo editar .replit directamente. Debes cambiar manualmente en la UI de Replit:

üìù CAMBIOS REQUERIDOS EN .replit (Editor de Replit):

1. SECCI√ìN [deployment] - L√≠nea 6-8:
   ANTES:
   [deployment]
   run = ["sh", "-c", "cd temp_nevin && npm run web"]
   deploymentTarget = "cloudrun"

   DESPU√âS:
   [deployment]
   run = ["sh", "-c", "./start_production.sh"]
   deploymentTarget = "cloudrun"

2. ALTERNATIVA (si prefieres comando directo):
   [deployment]
   run = ["sh", "-c", "pip install --no-cache-dir -r requirements.txt && gunicorn 'app:create_app()' --workers 2 --bind 0.0.0.0:$PORT"]
   deploymentTarget = "cloudrun"

3. OPCIONAL - Cambiar entrypoint (l√≠nea 2):
   ANTES:
   language = "nodejs"
   
   DESPU√âS:
   language = "python3"

‚úÖ ARCHIVOS YA CONFIGURADOS:

1. ‚úÖ .replitignore - Excluye 2.6GB de carpetas pesadas:
   - temp_nevin/ (939M)
   - node_modules/ (862M)
   - Nevin_AI/ (819M)
   - android/, ios/, .venv/, __pycache__/, etc.

2. ‚úÖ start_production.sh - Script de deployment listo
   - Instala dependencias sin cach√©
   - Ejecuta gunicorn en 0.0.0.0:$PORT
   - Workers: 2, Threads: 2

3. ‚úÖ requirements.txt - Limpio (183 paquetes √∫nicos, TODOS con versi√≥n espec√≠fica ==, sin duplicados)

4. ‚úÖ gunicorn instalado (v23.0.0)

5. ‚úÖ Endpoint /health verificado (responde 200)

üìä REDUCCI√ìN DE IMAGEN:

ANTES: ~2.6GB+ en deployment (temp_nevin + node_modules + Nevin_AI)
DESPU√âS: < 500MB estimado (solo Flask app y Python deps)

üöÄ COMANDO DE DEPLOYMENT (para .replit):

OPCI√ìN 1 - Usando script:
./start_production.sh

OPCI√ìN 2 - Comando directo:
pip install --no-cache-dir -r requirements.txt && gunicorn 'app:create_app()' --workers 2 --bind 0.0.0.0:$PORT

üîç VERIFICACI√ìN LOCAL (ya probado):
PORT=5000 gunicorn 'app:create_app()' --workers 2 --bind 0.0.0.0:5000

curl http://0.0.0.0:5000/health
‚úÖ Respuesta: {"status":"healthy", "version":"1.0.0", "database":{...}}

‚öôÔ∏è VARIABLES DE ENTORNO NECESARIAS:

- DATABASE_URL (ya configurada)
- FLASK_SECRET_KEY (ya configurada)
- PORT (Replit lo configura autom√°ticamente en deployment)
- Otras API keys seg√∫n necesidad (OpenAI, Anthropic, etc.)

üìã PR√ìXIMOS PASOS:

1. Edita .replit manualmente en la UI de Replit
2. Cambia la l√≠nea 7 a usar ./start_production.sh
3. Haz deploy desde la UI
4. Verifica que la URL p√∫blica responde en /health

üéØ CRITERIOS DE ACEPTACI√ìN CUMPLIDOS:

‚úÖ Imagen < 8 GiB (excluidos 2.6GB con .replitignore)
‚úÖ Servicio en 0.0.0.0:$PORT (verificado con gunicorn)
‚úÖ .replitignore aplicado
‚úÖ Endpoint /health funcional (200 OK)
‚úÖ requirements.txt limpio
‚úÖ gunicorn instalado y probado

‚ö†Ô∏è NOTA: replit.nix no se pudo editar directamente, pero las dependencias necesarias
ya est√°n instaladas v√≠a packager_tool (gunicorn, python3, etc.)
